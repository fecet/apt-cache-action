name: "Apt-Cache-Action"
description: Cache Apt Packages
author: Eeems
branding:
  icon: archive
  color: orange
inputs:
  packages:
    description: List of packages to install and cache
    required: true
  path:
    description: Location to cache deb files
    required: false
    default: .aptcache

runs:
  using: composite
  steps:
    # 1. 计算版本 Hash 并导出
    - name: Compute Apt Hash
      id: hash
      shell: bash
      run: |
        apt-get update -yq
        aptHash() { echo "$1-$(apt-cache policy "$1" \
                   | grep -oP '(?<=Candidate:\s)(.+)')"; }
        export -f aptHash
        hash=$(echo "${{ inputs.packages }}" \
               | xargs -rI {} bash -c 'aptHash {}' \
               | tr '\n' '-' \
               | md5sum \
               | cut -f1 -d' ')
        echo "::set-output name=hash::$hash"

    # 2. 恢复上次的 .deb 缓存
    - name: Restore Apt Cache
      id: cache
      uses: actions/cache@v4
      with:
        path: ${{ inputs.path }}
        key: apt-cache-${{ steps.hash.outputs.hash }}
        restore-keys: |
          apt-cache-

    # 3. 如果缓存命中，把 .deb 放回 apt 的缓存目录
    - name: Populate APT cache from backup
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: |
        cp "${{ inputs.path }}"/*.deb /var/cache/apt/archives/

    # 4. 更新源、安装（会优先用本地 .deb）
    - name: Install Packages
      shell: bash
      run: |
        apt-get update -yq
        apt-get install -yq ${{ inputs.packages }}

    - name: Save APT cache files
      if: always()
      shell: bash
      run: |
        mkdir -p "${{ inputs.path }}"
        cp /var/cache/apt/archives/*.deb "${{ inputs.path }}/" || true
        echo ">>> files now in cache dir:"
        ls -1 "${{ inputs.path }}/" || echo "(empty)"

    # （post 阶段会自动把 inputs.path 下的文件再缓存起来）
